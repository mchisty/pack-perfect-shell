apply plugin: 'com.android.application'

android {

// Add this at the top of the android { } block (or anywhere inside it)
def hasSigning = project.hasProperty("PACKPERFECT_STORE_FILE") &&
                 project.hasProperty("PACKPERFECT_STORE_PASSWORD") &&
                 project.hasProperty("PACKPERFECT_KEY_ALIAS") &&
                 project.hasProperty("PACKPERFECT_KEY_PASSWORD")

signingConfigs {
    release {
        if (hasSigning) {
            // The workflow restores the keystore to: android/app/packperfect.keystore
            // In the app module, file("packperfect.keystore") points to that file.
            storeFile file(PACKPERFECT_STORE_FILE)           // e.g. "packperfect.keystore"
            storePassword PACKPERFECT_STORE_PASSWORD
            keyAlias PACKPERFECT_KEY_ALIAS
            keyPassword PACKPERFECT_KEY_PASSWORD
        }
    }
}

buildTypes {
    release {
        // If you already have a 'release' block, just add the next line inside it:
        signingConfig hasSigning ? signingConfigs.release : signingConfigs.debug

        // keep your existing settings (minifyEnabled/shrinkResources/proguard) as-is
        // example:
        // minifyEnabled false
        // shrinkResources false
    }
    // keep your 'debug' block as-is
}
	
	
}

repositories {
    flatDir{
        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation project(':capacitor-android')
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    implementation project(':capacitor-cordova-android-plugins')
}

apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}
